// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: proto/user-data-manager.proto

package user_data_manager_grpc

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtectedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	LastAccess  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_access,json=lastAccess,proto3" json:"last_access,omitempty"`
}

func (x *ProtectedItem) Reset() {
	*x = ProtectedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtectedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtectedItem) ProtoMessage() {}

func (x *ProtectedItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtectedItem.ProtoReflect.Descriptor instead.
func (*ProtectedItem) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{0}
}

func (x *ProtectedItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtectedItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProtectedItem) GetCreatedDate() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ProtectedItem) GetLastAccess() *timestamp.Timestamp {
	if x != nil {
		return x.LastAccess
	}
	return nil
}

type LoginPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	LastAccess  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_access,json=lastAccess,proto3" json:"last_access,omitempty"`
	Login       string               `protobuf:"bytes,5,opt,name=login,proto3" json:"login,omitempty"`
	Password    string               `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Note        string               `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *LoginPassword) Reset() {
	*x = LoginPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPassword) ProtoMessage() {}

func (x *LoginPassword) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPassword.ProtoReflect.Descriptor instead.
func (*LoginPassword) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{1}
}

func (x *LoginPassword) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoginPassword) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginPassword) GetCreatedDate() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *LoginPassword) GetLastAccess() *timestamp.Timestamp {
	if x != nil {
		return x.LastAccess
	}
	return nil
}

func (x *LoginPassword) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *LoginPassword) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginPassword) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type CreateLoginPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Login    string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Note     string `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CreateLoginPassword) Reset() {
	*x = CreateLoginPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoginPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoginPassword) ProtoMessage() {}

func (x *CreateLoginPassword) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoginPassword.ProtoReflect.Descriptor instead.
func (*CreateLoginPassword) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLoginPassword) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLoginPassword) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *CreateLoginPassword) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateLoginPassword) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetLoginPasswordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLoginPasswordListRequest) Reset() {
	*x = GetLoginPasswordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginPasswordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginPasswordListRequest) ProtoMessage() {}

func (x *GetLoginPasswordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginPasswordListRequest.ProtoReflect.Descriptor instead.
func (*GetLoginPasswordListRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{3}
}

type GetLoginPasswordListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtectedItemList []*ProtectedItem `protobuf:"bytes,1,rep,name=ProtectedItemList,proto3" json:"ProtectedItemList,omitempty"`
}

func (x *GetLoginPasswordListResponse) Reset() {
	*x = GetLoginPasswordListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginPasswordListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginPasswordListResponse) ProtoMessage() {}

func (x *GetLoginPasswordListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginPasswordListResponse.ProtoReflect.Descriptor instead.
func (*GetLoginPasswordListResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{4}
}

func (x *GetLoginPasswordListResponse) GetProtectedItemList() []*ProtectedItem {
	if x != nil {
		return x.ProtectedItemList
	}
	return nil
}

type CreateLoginPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateLoginPassword *CreateLoginPassword `protobuf:"bytes,1,opt,name=CreateLoginPassword,proto3" json:"CreateLoginPassword,omitempty"`
}

func (x *CreateLoginPasswordRequest) Reset() {
	*x = CreateLoginPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoginPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoginPasswordRequest) ProtoMessage() {}

func (x *CreateLoginPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoginPasswordRequest.ProtoReflect.Descriptor instead.
func (*CreateLoginPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLoginPasswordRequest) GetCreateLoginPassword() *CreateLoginPassword {
	if x != nil {
		return x.CreateLoginPassword
	}
	return nil
}

type CreateLoginPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginPassword *LoginPassword `protobuf:"bytes,1,opt,name=LoginPassword,proto3" json:"LoginPassword,omitempty"`
}

func (x *CreateLoginPasswordResponse) Reset() {
	*x = CreateLoginPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoginPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoginPasswordResponse) ProtoMessage() {}

func (x *CreateLoginPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoginPasswordResponse.ProtoReflect.Descriptor instead.
func (*CreateLoginPasswordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLoginPasswordResponse) GetLoginPassword() *LoginPassword {
	if x != nil {
		return x.LoginPassword
	}
	return nil
}

type GetLoginPasswordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLoginPasswordByIdRequest) Reset() {
	*x = GetLoginPasswordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginPasswordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginPasswordByIdRequest) ProtoMessage() {}

func (x *GetLoginPasswordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginPasswordByIdRequest.ProtoReflect.Descriptor instead.
func (*GetLoginPasswordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{7}
}

func (x *GetLoginPasswordByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLoginPasswordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginPassword *LoginPassword `protobuf:"bytes,1,opt,name=LoginPassword,proto3" json:"LoginPassword,omitempty"`
}

func (x *GetLoginPasswordByIdResponse) Reset() {
	*x = GetLoginPasswordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginPasswordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginPasswordByIdResponse) ProtoMessage() {}

func (x *GetLoginPasswordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginPasswordByIdResponse.ProtoReflect.Descriptor instead.
func (*GetLoginPasswordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{8}
}

func (x *GetLoginPasswordByIdResponse) GetLoginPassword() *LoginPassword {
	if x != nil {
		return x.LoginPassword
	}
	return nil
}

type PatchLoginPasswordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginPassword *LoginPassword `protobuf:"bytes,1,opt,name=LoginPassword,proto3" json:"LoginPassword,omitempty"`
}

func (x *PatchLoginPasswordByIdRequest) Reset() {
	*x = PatchLoginPasswordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchLoginPasswordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchLoginPasswordByIdRequest) ProtoMessage() {}

func (x *PatchLoginPasswordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchLoginPasswordByIdRequest.ProtoReflect.Descriptor instead.
func (*PatchLoginPasswordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{9}
}

func (x *PatchLoginPasswordByIdRequest) GetLoginPassword() *LoginPassword {
	if x != nil {
		return x.LoginPassword
	}
	return nil
}

type PatchLoginPasswordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginPassword *LoginPassword `protobuf:"bytes,1,opt,name=LoginPassword,proto3" json:"LoginPassword,omitempty"`
}

func (x *PatchLoginPasswordByIdResponse) Reset() {
	*x = PatchLoginPasswordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchLoginPasswordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchLoginPasswordByIdResponse) ProtoMessage() {}

func (x *PatchLoginPasswordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchLoginPasswordByIdResponse.ProtoReflect.Descriptor instead.
func (*PatchLoginPasswordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{10}
}

func (x *PatchLoginPasswordByIdResponse) GetLoginPassword() *LoginPassword {
	if x != nil {
		return x.LoginPassword
	}
	return nil
}

type DeleteLoginPasswordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLoginPasswordByIdRequest) Reset() {
	*x = DeleteLoginPasswordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLoginPasswordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLoginPasswordByIdRequest) ProtoMessage() {}

func (x *DeleteLoginPasswordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLoginPasswordByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteLoginPasswordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteLoginPasswordByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreditCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	LastAccess  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_access,json=lastAccess,proto3" json:"last_access,omitempty"`
	Number      string               `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
	Expiration  string               `protobuf:"bytes,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Cvv         string               `protobuf:"bytes,7,opt,name=cvv,proto3" json:"cvv,omitempty"`
	Owner       string               `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
	Note        string               `protobuf:"bytes,9,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{12}
}

func (x *CreditCard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreditCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreditCard) GetCreatedDate() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *CreditCard) GetLastAccess() *timestamp.Timestamp {
	if x != nil {
		return x.LastAccess
	}
	return nil
}

func (x *CreditCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CreditCard) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

func (x *CreditCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *CreditCard) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreditCard) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type CreateCreditCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number     string `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Expiration string `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Cvv        string `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	Owner      string `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Note       string `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CreateCreditCard) Reset() {
	*x = CreateCreditCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreditCard) ProtoMessage() {}

func (x *CreateCreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreditCard.ProtoReflect.Descriptor instead.
func (*CreateCreditCard) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{13}
}

func (x *CreateCreditCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCreditCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CreateCreditCard) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

func (x *CreateCreditCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *CreateCreditCard) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateCreditCard) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetCreditCardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCreditCardListRequest) Reset() {
	*x = GetCreditCardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreditCardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditCardListRequest) ProtoMessage() {}

func (x *GetCreditCardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditCardListRequest.ProtoReflect.Descriptor instead.
func (*GetCreditCardListRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{14}
}

type GetCreditCardListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtectedItemList []*ProtectedItem `protobuf:"bytes,1,rep,name=ProtectedItemList,proto3" json:"ProtectedItemList,omitempty"`
}

func (x *GetCreditCardListResponse) Reset() {
	*x = GetCreditCardListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreditCardListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditCardListResponse) ProtoMessage() {}

func (x *GetCreditCardListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditCardListResponse.ProtoReflect.Descriptor instead.
func (*GetCreditCardListResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{15}
}

func (x *GetCreditCardListResponse) GetProtectedItemList() []*ProtectedItem {
	if x != nil {
		return x.ProtectedItemList
	}
	return nil
}

type CreateCreditCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateCreditCard *CreateCreditCard `protobuf:"bytes,1,opt,name=CreateCreditCard,proto3" json:"CreateCreditCard,omitempty"`
}

func (x *CreateCreditCardRequest) Reset() {
	*x = CreateCreditCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCreditCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreditCardRequest) ProtoMessage() {}

func (x *CreateCreditCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreditCardRequest.ProtoReflect.Descriptor instead.
func (*CreateCreditCardRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCreditCardRequest) GetCreateCreditCard() *CreateCreditCard {
	if x != nil {
		return x.CreateCreditCard
	}
	return nil
}

type CreateCreditCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditCard *CreditCard `protobuf:"bytes,1,opt,name=CreditCard,proto3" json:"CreditCard,omitempty"`
}

func (x *CreateCreditCardResponse) Reset() {
	*x = CreateCreditCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCreditCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreditCardResponse) ProtoMessage() {}

func (x *CreateCreditCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreditCardResponse.ProtoReflect.Descriptor instead.
func (*CreateCreditCardResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCreditCardResponse) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

type GetCreditCardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCreditCardByIdRequest) Reset() {
	*x = GetCreditCardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreditCardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditCardByIdRequest) ProtoMessage() {}

func (x *GetCreditCardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditCardByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCreditCardByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{18}
}

func (x *GetCreditCardByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCreditCardByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditCard *CreditCard `protobuf:"bytes,1,opt,name=CreditCard,proto3" json:"CreditCard,omitempty"`
}

func (x *GetCreditCardByIdResponse) Reset() {
	*x = GetCreditCardByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreditCardByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditCardByIdResponse) ProtoMessage() {}

func (x *GetCreditCardByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditCardByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCreditCardByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{19}
}

func (x *GetCreditCardByIdResponse) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

type PatchCreditCardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditCard *CreditCard `protobuf:"bytes,1,opt,name=CreditCard,proto3" json:"CreditCard,omitempty"`
}

func (x *PatchCreditCardByIdRequest) Reset() {
	*x = PatchCreditCardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchCreditCardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchCreditCardByIdRequest) ProtoMessage() {}

func (x *PatchCreditCardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchCreditCardByIdRequest.ProtoReflect.Descriptor instead.
func (*PatchCreditCardByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{20}
}

func (x *PatchCreditCardByIdRequest) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

type PatchCreditCardByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditCard *CreditCard `protobuf:"bytes,1,opt,name=CreditCard,proto3" json:"CreditCard,omitempty"`
}

func (x *PatchCreditCardByIdResponse) Reset() {
	*x = PatchCreditCardByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchCreditCardByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchCreditCardByIdResponse) ProtoMessage() {}

func (x *PatchCreditCardByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchCreditCardByIdResponse.ProtoReflect.Descriptor instead.
func (*PatchCreditCardByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{21}
}

func (x *PatchCreditCardByIdResponse) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

type DeleteCreditCardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCreditCardByIdRequest) Reset() {
	*x = DeleteCreditCardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCreditCardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCreditCardByIdRequest) ProtoMessage() {}

func (x *DeleteCreditCardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCreditCardByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCreditCardByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteCreditCardByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TextRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	LastAccess  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_access,json=lastAccess,proto3" json:"last_access,omitempty"`
	Text        string               `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Note        string               `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *TextRecord) Reset() {
	*x = TextRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextRecord) ProtoMessage() {}

func (x *TextRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextRecord.ProtoReflect.Descriptor instead.
func (*TextRecord) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{23}
}

func (x *TextRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TextRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TextRecord) GetCreatedDate() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *TextRecord) GetLastAccess() *timestamp.Timestamp {
	if x != nil {
		return x.LastAccess
	}
	return nil
}

func (x *TextRecord) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextRecord) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetTextRecordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTextRecordListRequest) Reset() {
	*x = GetTextRecordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTextRecordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextRecordListRequest) ProtoMessage() {}

func (x *GetTextRecordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextRecordListRequest.ProtoReflect.Descriptor instead.
func (*GetTextRecordListRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{24}
}

type GetTextRecordListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtectedItemList []*ProtectedItem `protobuf:"bytes,1,rep,name=ProtectedItemList,proto3" json:"ProtectedItemList,omitempty"`
}

func (x *GetTextRecordListResponse) Reset() {
	*x = GetTextRecordListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTextRecordListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextRecordListResponse) ProtoMessage() {}

func (x *GetTextRecordListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextRecordListResponse.ProtoReflect.Descriptor instead.
func (*GetTextRecordListResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{25}
}

func (x *GetTextRecordListResponse) GetProtectedItemList() []*ProtectedItem {
	if x != nil {
		return x.ProtectedItemList
	}
	return nil
}

type CreateTextRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextRecord *TextRecord `protobuf:"bytes,1,opt,name=TextRecord,proto3" json:"TextRecord,omitempty"`
}

func (x *CreateTextRecordRequest) Reset() {
	*x = CreateTextRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTextRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTextRecordRequest) ProtoMessage() {}

func (x *CreateTextRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTextRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateTextRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{26}
}

func (x *CreateTextRecordRequest) GetTextRecord() *TextRecord {
	if x != nil {
		return x.TextRecord
	}
	return nil
}

type CreateTextRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextRecord *TextRecord `protobuf:"bytes,1,opt,name=TextRecord,proto3" json:"TextRecord,omitempty"`
}

func (x *CreateTextRecordResponse) Reset() {
	*x = CreateTextRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTextRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTextRecordResponse) ProtoMessage() {}

func (x *CreateTextRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTextRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateTextRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{27}
}

func (x *CreateTextRecordResponse) GetTextRecord() *TextRecord {
	if x != nil {
		return x.TextRecord
	}
	return nil
}

type GetTextRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTextRecordByIdRequest) Reset() {
	*x = GetTextRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTextRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextRecordByIdRequest) ProtoMessage() {}

func (x *GetTextRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTextRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{28}
}

func (x *GetTextRecordByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTextRecordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextRecord *TextRecord `protobuf:"bytes,1,opt,name=TextRecord,proto3" json:"TextRecord,omitempty"`
}

func (x *GetTextRecordByIdResponse) Reset() {
	*x = GetTextRecordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTextRecordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextRecordByIdResponse) ProtoMessage() {}

func (x *GetTextRecordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextRecordByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTextRecordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{29}
}

func (x *GetTextRecordByIdResponse) GetTextRecord() *TextRecord {
	if x != nil {
		return x.TextRecord
	}
	return nil
}

type PatchTextRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextRecord *TextRecord `protobuf:"bytes,1,opt,name=TextRecord,proto3" json:"TextRecord,omitempty"`
}

func (x *PatchTextRecordByIdRequest) Reset() {
	*x = PatchTextRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchTextRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchTextRecordByIdRequest) ProtoMessage() {}

func (x *PatchTextRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchTextRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*PatchTextRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{30}
}

func (x *PatchTextRecordByIdRequest) GetTextRecord() *TextRecord {
	if x != nil {
		return x.TextRecord
	}
	return nil
}

type PatchTextRecordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextRecord *TextRecord `protobuf:"bytes,1,opt,name=TextRecord,proto3" json:"TextRecord,omitempty"`
}

func (x *PatchTextRecordByIdResponse) Reset() {
	*x = PatchTextRecordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchTextRecordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchTextRecordByIdResponse) ProtoMessage() {}

func (x *PatchTextRecordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchTextRecordByIdResponse.ProtoReflect.Descriptor instead.
func (*PatchTextRecordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{31}
}

func (x *PatchTextRecordByIdResponse) GetTextRecord() *TextRecord {
	if x != nil {
		return x.TextRecord
	}
	return nil
}

type DeleteTextRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTextRecordByIdRequest) Reset() {
	*x = DeleteTextRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTextRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTextRecordByIdRequest) ProtoMessage() {}

func (x *DeleteTextRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTextRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteTextRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteTextRecordByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BinaryRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	LastAccess  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_access,json=lastAccess,proto3" json:"last_access,omitempty"`
	Binary      string               `protobuf:"bytes,5,opt,name=binary,proto3" json:"binary,omitempty"`
	Note        string               `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *BinaryRecord) Reset() {
	*x = BinaryRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryRecord) ProtoMessage() {}

func (x *BinaryRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryRecord.ProtoReflect.Descriptor instead.
func (*BinaryRecord) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{33}
}

func (x *BinaryRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BinaryRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BinaryRecord) GetCreatedDate() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *BinaryRecord) GetLastAccess() *timestamp.Timestamp {
	if x != nil {
		return x.LastAccess
	}
	return nil
}

func (x *BinaryRecord) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *BinaryRecord) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetBinaryRecordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBinaryRecordListRequest) Reset() {
	*x = GetBinaryRecordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBinaryRecordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBinaryRecordListRequest) ProtoMessage() {}

func (x *GetBinaryRecordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBinaryRecordListRequest.ProtoReflect.Descriptor instead.
func (*GetBinaryRecordListRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{34}
}

type GetBinaryRecordListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtectedItemList []*ProtectedItem `protobuf:"bytes,1,rep,name=ProtectedItemList,proto3" json:"ProtectedItemList,omitempty"`
}

func (x *GetBinaryRecordListResponse) Reset() {
	*x = GetBinaryRecordListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBinaryRecordListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBinaryRecordListResponse) ProtoMessage() {}

func (x *GetBinaryRecordListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBinaryRecordListResponse.ProtoReflect.Descriptor instead.
func (*GetBinaryRecordListResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{35}
}

func (x *GetBinaryRecordListResponse) GetProtectedItemList() []*ProtectedItem {
	if x != nil {
		return x.ProtectedItemList
	}
	return nil
}

type CreateBinaryRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinaryRecord *BinaryRecord `protobuf:"bytes,1,opt,name=BinaryRecord,proto3" json:"BinaryRecord,omitempty"`
}

func (x *CreateBinaryRecordRequest) Reset() {
	*x = CreateBinaryRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBinaryRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBinaryRecordRequest) ProtoMessage() {}

func (x *CreateBinaryRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBinaryRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateBinaryRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{36}
}

func (x *CreateBinaryRecordRequest) GetBinaryRecord() *BinaryRecord {
	if x != nil {
		return x.BinaryRecord
	}
	return nil
}

type CreateBinaryRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinaryRecord *BinaryRecord `protobuf:"bytes,1,opt,name=BinaryRecord,proto3" json:"BinaryRecord,omitempty"`
}

func (x *CreateBinaryRecordResponse) Reset() {
	*x = CreateBinaryRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBinaryRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBinaryRecordResponse) ProtoMessage() {}

func (x *CreateBinaryRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBinaryRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateBinaryRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{37}
}

func (x *CreateBinaryRecordResponse) GetBinaryRecord() *BinaryRecord {
	if x != nil {
		return x.BinaryRecord
	}
	return nil
}

type GetBinaryRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBinaryRecordByIdRequest) Reset() {
	*x = GetBinaryRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBinaryRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBinaryRecordByIdRequest) ProtoMessage() {}

func (x *GetBinaryRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBinaryRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*GetBinaryRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{38}
}

func (x *GetBinaryRecordByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBinaryRecordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinaryRecord *BinaryRecord `protobuf:"bytes,1,opt,name=BinaryRecord,proto3" json:"BinaryRecord,omitempty"`
}

func (x *GetBinaryRecordByIdResponse) Reset() {
	*x = GetBinaryRecordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBinaryRecordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBinaryRecordByIdResponse) ProtoMessage() {}

func (x *GetBinaryRecordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBinaryRecordByIdResponse.ProtoReflect.Descriptor instead.
func (*GetBinaryRecordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{39}
}

func (x *GetBinaryRecordByIdResponse) GetBinaryRecord() *BinaryRecord {
	if x != nil {
		return x.BinaryRecord
	}
	return nil
}

type PatchBinaryRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinaryRecord *BinaryRecord `protobuf:"bytes,1,opt,name=BinaryRecord,proto3" json:"BinaryRecord,omitempty"`
}

func (x *PatchBinaryRecordByIdRequest) Reset() {
	*x = PatchBinaryRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchBinaryRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchBinaryRecordByIdRequest) ProtoMessage() {}

func (x *PatchBinaryRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchBinaryRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*PatchBinaryRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{40}
}

func (x *PatchBinaryRecordByIdRequest) GetBinaryRecord() *BinaryRecord {
	if x != nil {
		return x.BinaryRecord
	}
	return nil
}

type PatchBinaryRecordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinaryRecord *BinaryRecord `protobuf:"bytes,1,opt,name=BinaryRecord,proto3" json:"BinaryRecord,omitempty"`
}

func (x *PatchBinaryRecordByIdResponse) Reset() {
	*x = PatchBinaryRecordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchBinaryRecordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchBinaryRecordByIdResponse) ProtoMessage() {}

func (x *PatchBinaryRecordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchBinaryRecordByIdResponse.ProtoReflect.Descriptor instead.
func (*PatchBinaryRecordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{41}
}

func (x *PatchBinaryRecordByIdResponse) GetBinaryRecord() *BinaryRecord {
	if x != nil {
		return x.BinaryRecord
	}
	return nil
}

type DeleteBinaryRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBinaryRecordByIdRequest) Reset() {
	*x = DeleteBinaryRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_data_manager_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBinaryRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBinaryRecordByIdRequest) ProtoMessage() {}

func (x *DeleteBinaryRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_data_manager_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBinaryRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteBinaryRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_data_manager_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteBinaryRecordByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_proto_user_data_manager_proto protoreflect.FileDescriptor

var file_proto_user_data_manager_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x65, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x67, 0x0a, 0x1d, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x68, 0x0a, 0x1e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa0, 0x02, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x76, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0x5b, 0x0a,
	0x1a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0x5c, 0x0a, 0x1b, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x1a,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2a, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x22, 0x5b, 0x0a, 0x1a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x22, 0x5c, 0x0a, 0x1b, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22,
	0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xda,
	0x01, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x61, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2c, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22,
	0x63, 0x0a, 0x1c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x22, 0x64, 0x0a, 0x1d, 0x50, 0x61, 0x74, 0x63, 0x68, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xe3, 0x11, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x16, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7a, 0x0a, 0x15, 0x50, 0x61, 0x74, 0x63, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x1c, 0x5a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_data_manager_proto_rawDescOnce sync.Once
	file_proto_user_data_manager_proto_rawDescData = file_proto_user_data_manager_proto_rawDesc
)

func file_proto_user_data_manager_proto_rawDescGZIP() []byte {
	file_proto_user_data_manager_proto_rawDescOnce.Do(func() {
		file_proto_user_data_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_data_manager_proto_rawDescData)
	})
	return file_proto_user_data_manager_proto_rawDescData
}

var file_proto_user_data_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_proto_user_data_manager_proto_goTypes = []interface{}{
	(*ProtectedItem)(nil),                  // 0: user_data_manager.ProtectedItem
	(*LoginPassword)(nil),                  // 1: user_data_manager.LoginPassword
	(*CreateLoginPassword)(nil),            // 2: user_data_manager.CreateLoginPassword
	(*GetLoginPasswordListRequest)(nil),    // 3: user_data_manager.GetLoginPasswordListRequest
	(*GetLoginPasswordListResponse)(nil),   // 4: user_data_manager.GetLoginPasswordListResponse
	(*CreateLoginPasswordRequest)(nil),     // 5: user_data_manager.CreateLoginPasswordRequest
	(*CreateLoginPasswordResponse)(nil),    // 6: user_data_manager.CreateLoginPasswordResponse
	(*GetLoginPasswordByIdRequest)(nil),    // 7: user_data_manager.GetLoginPasswordByIdRequest
	(*GetLoginPasswordByIdResponse)(nil),   // 8: user_data_manager.GetLoginPasswordByIdResponse
	(*PatchLoginPasswordByIdRequest)(nil),  // 9: user_data_manager.PatchLoginPasswordByIdRequest
	(*PatchLoginPasswordByIdResponse)(nil), // 10: user_data_manager.PatchLoginPasswordByIdResponse
	(*DeleteLoginPasswordByIdRequest)(nil), // 11: user_data_manager.DeleteLoginPasswordByIdRequest
	(*CreditCard)(nil),                     // 12: user_data_manager.CreditCard
	(*CreateCreditCard)(nil),               // 13: user_data_manager.CreateCreditCard
	(*GetCreditCardListRequest)(nil),       // 14: user_data_manager.GetCreditCardListRequest
	(*GetCreditCardListResponse)(nil),      // 15: user_data_manager.GetCreditCardListResponse
	(*CreateCreditCardRequest)(nil),        // 16: user_data_manager.CreateCreditCardRequest
	(*CreateCreditCardResponse)(nil),       // 17: user_data_manager.CreateCreditCardResponse
	(*GetCreditCardByIdRequest)(nil),       // 18: user_data_manager.GetCreditCardByIdRequest
	(*GetCreditCardByIdResponse)(nil),      // 19: user_data_manager.GetCreditCardByIdResponse
	(*PatchCreditCardByIdRequest)(nil),     // 20: user_data_manager.PatchCreditCardByIdRequest
	(*PatchCreditCardByIdResponse)(nil),    // 21: user_data_manager.PatchCreditCardByIdResponse
	(*DeleteCreditCardByIdRequest)(nil),    // 22: user_data_manager.DeleteCreditCardByIdRequest
	(*TextRecord)(nil),                     // 23: user_data_manager.TextRecord
	(*GetTextRecordListRequest)(nil),       // 24: user_data_manager.GetTextRecordListRequest
	(*GetTextRecordListResponse)(nil),      // 25: user_data_manager.GetTextRecordListResponse
	(*CreateTextRecordRequest)(nil),        // 26: user_data_manager.CreateTextRecordRequest
	(*CreateTextRecordResponse)(nil),       // 27: user_data_manager.CreateTextRecordResponse
	(*GetTextRecordByIdRequest)(nil),       // 28: user_data_manager.GetTextRecordByIdRequest
	(*GetTextRecordByIdResponse)(nil),      // 29: user_data_manager.GetTextRecordByIdResponse
	(*PatchTextRecordByIdRequest)(nil),     // 30: user_data_manager.PatchTextRecordByIdRequest
	(*PatchTextRecordByIdResponse)(nil),    // 31: user_data_manager.PatchTextRecordByIdResponse
	(*DeleteTextRecordByIdRequest)(nil),    // 32: user_data_manager.DeleteTextRecordByIdRequest
	(*BinaryRecord)(nil),                   // 33: user_data_manager.BinaryRecord
	(*GetBinaryRecordListRequest)(nil),     // 34: user_data_manager.GetBinaryRecordListRequest
	(*GetBinaryRecordListResponse)(nil),    // 35: user_data_manager.GetBinaryRecordListResponse
	(*CreateBinaryRecordRequest)(nil),      // 36: user_data_manager.CreateBinaryRecordRequest
	(*CreateBinaryRecordResponse)(nil),     // 37: user_data_manager.CreateBinaryRecordResponse
	(*GetBinaryRecordByIdRequest)(nil),     // 38: user_data_manager.GetBinaryRecordByIdRequest
	(*GetBinaryRecordByIdResponse)(nil),    // 39: user_data_manager.GetBinaryRecordByIdResponse
	(*PatchBinaryRecordByIdRequest)(nil),   // 40: user_data_manager.PatchBinaryRecordByIdRequest
	(*PatchBinaryRecordByIdResponse)(nil),  // 41: user_data_manager.PatchBinaryRecordByIdResponse
	(*DeleteBinaryRecordByIdRequest)(nil),  // 42: user_data_manager.DeleteBinaryRecordByIdRequest
	(*timestamp.Timestamp)(nil),            // 43: google.protobuf.Timestamp
	(*empty.Empty)(nil),                    // 44: google.protobuf.Empty
}
var file_proto_user_data_manager_proto_depIdxs = []int32{
	43, // 0: user_data_manager.ProtectedItem.created_date:type_name -> google.protobuf.Timestamp
	43, // 1: user_data_manager.ProtectedItem.last_access:type_name -> google.protobuf.Timestamp
	43, // 2: user_data_manager.LoginPassword.created_date:type_name -> google.protobuf.Timestamp
	43, // 3: user_data_manager.LoginPassword.last_access:type_name -> google.protobuf.Timestamp
	0,  // 4: user_data_manager.GetLoginPasswordListResponse.ProtectedItemList:type_name -> user_data_manager.ProtectedItem
	2,  // 5: user_data_manager.CreateLoginPasswordRequest.CreateLoginPassword:type_name -> user_data_manager.CreateLoginPassword
	1,  // 6: user_data_manager.CreateLoginPasswordResponse.LoginPassword:type_name -> user_data_manager.LoginPassword
	1,  // 7: user_data_manager.GetLoginPasswordByIdResponse.LoginPassword:type_name -> user_data_manager.LoginPassword
	1,  // 8: user_data_manager.PatchLoginPasswordByIdRequest.LoginPassword:type_name -> user_data_manager.LoginPassword
	1,  // 9: user_data_manager.PatchLoginPasswordByIdResponse.LoginPassword:type_name -> user_data_manager.LoginPassword
	43, // 10: user_data_manager.CreditCard.created_date:type_name -> google.protobuf.Timestamp
	43, // 11: user_data_manager.CreditCard.last_access:type_name -> google.protobuf.Timestamp
	0,  // 12: user_data_manager.GetCreditCardListResponse.ProtectedItemList:type_name -> user_data_manager.ProtectedItem
	13, // 13: user_data_manager.CreateCreditCardRequest.CreateCreditCard:type_name -> user_data_manager.CreateCreditCard
	12, // 14: user_data_manager.CreateCreditCardResponse.CreditCard:type_name -> user_data_manager.CreditCard
	12, // 15: user_data_manager.GetCreditCardByIdResponse.CreditCard:type_name -> user_data_manager.CreditCard
	12, // 16: user_data_manager.PatchCreditCardByIdRequest.CreditCard:type_name -> user_data_manager.CreditCard
	12, // 17: user_data_manager.PatchCreditCardByIdResponse.CreditCard:type_name -> user_data_manager.CreditCard
	43, // 18: user_data_manager.TextRecord.created_date:type_name -> google.protobuf.Timestamp
	43, // 19: user_data_manager.TextRecord.last_access:type_name -> google.protobuf.Timestamp
	0,  // 20: user_data_manager.GetTextRecordListResponse.ProtectedItemList:type_name -> user_data_manager.ProtectedItem
	23, // 21: user_data_manager.CreateTextRecordRequest.TextRecord:type_name -> user_data_manager.TextRecord
	23, // 22: user_data_manager.CreateTextRecordResponse.TextRecord:type_name -> user_data_manager.TextRecord
	23, // 23: user_data_manager.GetTextRecordByIdResponse.TextRecord:type_name -> user_data_manager.TextRecord
	23, // 24: user_data_manager.PatchTextRecordByIdRequest.TextRecord:type_name -> user_data_manager.TextRecord
	23, // 25: user_data_manager.PatchTextRecordByIdResponse.TextRecord:type_name -> user_data_manager.TextRecord
	43, // 26: user_data_manager.BinaryRecord.created_date:type_name -> google.protobuf.Timestamp
	43, // 27: user_data_manager.BinaryRecord.last_access:type_name -> google.protobuf.Timestamp
	0,  // 28: user_data_manager.GetBinaryRecordListResponse.ProtectedItemList:type_name -> user_data_manager.ProtectedItem
	33, // 29: user_data_manager.CreateBinaryRecordRequest.BinaryRecord:type_name -> user_data_manager.BinaryRecord
	33, // 30: user_data_manager.CreateBinaryRecordResponse.BinaryRecord:type_name -> user_data_manager.BinaryRecord
	33, // 31: user_data_manager.GetBinaryRecordByIdResponse.BinaryRecord:type_name -> user_data_manager.BinaryRecord
	33, // 32: user_data_manager.PatchBinaryRecordByIdRequest.BinaryRecord:type_name -> user_data_manager.BinaryRecord
	33, // 33: user_data_manager.PatchBinaryRecordByIdResponse.BinaryRecord:type_name -> user_data_manager.BinaryRecord
	3,  // 34: user_data_manager.UserDataManager.GetLoginPasswordList:input_type -> user_data_manager.GetLoginPasswordListRequest
	5,  // 35: user_data_manager.UserDataManager.CreateLoginPassword:input_type -> user_data_manager.CreateLoginPasswordRequest
	7,  // 36: user_data_manager.UserDataManager.GetLoginPasswordById:input_type -> user_data_manager.GetLoginPasswordByIdRequest
	9,  // 37: user_data_manager.UserDataManager.PatchLoginPasswordById:input_type -> user_data_manager.PatchLoginPasswordByIdRequest
	11, // 38: user_data_manager.UserDataManager.DeleteLoginPasswordById:input_type -> user_data_manager.DeleteLoginPasswordByIdRequest
	14, // 39: user_data_manager.UserDataManager.GetCreditCardList:input_type -> user_data_manager.GetCreditCardListRequest
	16, // 40: user_data_manager.UserDataManager.CreateCreditCard:input_type -> user_data_manager.CreateCreditCardRequest
	18, // 41: user_data_manager.UserDataManager.GetCreditCardById:input_type -> user_data_manager.GetCreditCardByIdRequest
	20, // 42: user_data_manager.UserDataManager.PatchCreditCardById:input_type -> user_data_manager.PatchCreditCardByIdRequest
	22, // 43: user_data_manager.UserDataManager.DeleteCreditCardById:input_type -> user_data_manager.DeleteCreditCardByIdRequest
	24, // 44: user_data_manager.UserDataManager.GetTextRecordList:input_type -> user_data_manager.GetTextRecordListRequest
	26, // 45: user_data_manager.UserDataManager.CreateTextRecord:input_type -> user_data_manager.CreateTextRecordRequest
	28, // 46: user_data_manager.UserDataManager.GetTextRecordById:input_type -> user_data_manager.GetTextRecordByIdRequest
	30, // 47: user_data_manager.UserDataManager.PatchTextRecordById:input_type -> user_data_manager.PatchTextRecordByIdRequest
	32, // 48: user_data_manager.UserDataManager.DeleteTextRecordById:input_type -> user_data_manager.DeleteTextRecordByIdRequest
	34, // 49: user_data_manager.UserDataManager.GetBinaryRecordList:input_type -> user_data_manager.GetBinaryRecordListRequest
	36, // 50: user_data_manager.UserDataManager.CreateBinaryRecord:input_type -> user_data_manager.CreateBinaryRecordRequest
	38, // 51: user_data_manager.UserDataManager.GetBinaryRecordById:input_type -> user_data_manager.GetBinaryRecordByIdRequest
	40, // 52: user_data_manager.UserDataManager.PatchBinaryRecordById:input_type -> user_data_manager.PatchBinaryRecordByIdRequest
	42, // 53: user_data_manager.UserDataManager.DeleteBinaryRecordById:input_type -> user_data_manager.DeleteBinaryRecordByIdRequest
	4,  // 54: user_data_manager.UserDataManager.GetLoginPasswordList:output_type -> user_data_manager.GetLoginPasswordListResponse
	6,  // 55: user_data_manager.UserDataManager.CreateLoginPassword:output_type -> user_data_manager.CreateLoginPasswordResponse
	8,  // 56: user_data_manager.UserDataManager.GetLoginPasswordById:output_type -> user_data_manager.GetLoginPasswordByIdResponse
	10, // 57: user_data_manager.UserDataManager.PatchLoginPasswordById:output_type -> user_data_manager.PatchLoginPasswordByIdResponse
	44, // 58: user_data_manager.UserDataManager.DeleteLoginPasswordById:output_type -> google.protobuf.Empty
	15, // 59: user_data_manager.UserDataManager.GetCreditCardList:output_type -> user_data_manager.GetCreditCardListResponse
	17, // 60: user_data_manager.UserDataManager.CreateCreditCard:output_type -> user_data_manager.CreateCreditCardResponse
	19, // 61: user_data_manager.UserDataManager.GetCreditCardById:output_type -> user_data_manager.GetCreditCardByIdResponse
	21, // 62: user_data_manager.UserDataManager.PatchCreditCardById:output_type -> user_data_manager.PatchCreditCardByIdResponse
	44, // 63: user_data_manager.UserDataManager.DeleteCreditCardById:output_type -> google.protobuf.Empty
	25, // 64: user_data_manager.UserDataManager.GetTextRecordList:output_type -> user_data_manager.GetTextRecordListResponse
	27, // 65: user_data_manager.UserDataManager.CreateTextRecord:output_type -> user_data_manager.CreateTextRecordResponse
	29, // 66: user_data_manager.UserDataManager.GetTextRecordById:output_type -> user_data_manager.GetTextRecordByIdResponse
	31, // 67: user_data_manager.UserDataManager.PatchTextRecordById:output_type -> user_data_manager.PatchTextRecordByIdResponse
	44, // 68: user_data_manager.UserDataManager.DeleteTextRecordById:output_type -> google.protobuf.Empty
	35, // 69: user_data_manager.UserDataManager.GetBinaryRecordList:output_type -> user_data_manager.GetBinaryRecordListResponse
	37, // 70: user_data_manager.UserDataManager.CreateBinaryRecord:output_type -> user_data_manager.CreateBinaryRecordResponse
	39, // 71: user_data_manager.UserDataManager.GetBinaryRecordById:output_type -> user_data_manager.GetBinaryRecordByIdResponse
	41, // 72: user_data_manager.UserDataManager.PatchBinaryRecordById:output_type -> user_data_manager.PatchBinaryRecordByIdResponse
	44, // 73: user_data_manager.UserDataManager.DeleteBinaryRecordById:output_type -> google.protobuf.Empty
	54, // [54:74] is the sub-list for method output_type
	34, // [34:54] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_proto_user_data_manager_proto_init() }
func file_proto_user_data_manager_proto_init() {
	if File_proto_user_data_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_data_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtectedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoginPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginPasswordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginPasswordListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoginPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoginPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginPasswordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginPasswordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchLoginPasswordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchLoginPasswordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoginPasswordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCreditCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreditCardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreditCardListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCreditCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCreditCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreditCardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreditCardByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchCreditCardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchCreditCardByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCreditCardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTextRecordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTextRecordListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTextRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTextRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTextRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTextRecordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchTextRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchTextRecordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTextRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBinaryRecordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBinaryRecordListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBinaryRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBinaryRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBinaryRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBinaryRecordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchBinaryRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchBinaryRecordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_data_manager_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBinaryRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_data_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_data_manager_proto_goTypes,
		DependencyIndexes: file_proto_user_data_manager_proto_depIdxs,
		MessageInfos:      file_proto_user_data_manager_proto_msgTypes,
	}.Build()
	File_proto_user_data_manager_proto = out.File
	file_proto_user_data_manager_proto_rawDesc = nil
	file_proto_user_data_manager_proto_goTypes = nil
	file_proto_user_data_manager_proto_depIdxs = nil
}
